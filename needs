supbase url : https://tyzhqkvauoujzwxwkqsg.supabase.co
supabase api key : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InR5emhxa3ZhdW91anp3eHdrcXNnIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MTgxNzE0MDksImV4cCI6MjAzMzc0NzQwOX0.-Cvcfopgseqzk2vzmhCxvppnyEhk8RDVuqfkB67ppzU

create table
  public.categories (
    category_id serial,
    category_name character varying(255) not null,
    constraint categories_pkey primary key (category_id)
  ) tablespace pg_default;

  create table
  public.products (
    product_id serial,
    product_code character varying(50) not null,
    product_name character varying(255) not null,
    category_id integer null,
    subcategory_id integer null,
    price numeric(10, 2) not null,
    min_stock integer not null,
    max_stock integer not null,
    current_stock integer not null default 0,
    constraint products_pkey primary key (product_id),
    constraint products_category_id_fkey foreign key (category_id) references categories (category_id),
    constraint products_subcategory_id_fkey foreign key (subcategory_id) references subcategories (subcategory_id)
  ) tablespace pg_default;

  create view
  public.products_view as
select
  p.product_id,
  p.product_code,
  p.product_name,
  c.category_name,
  s.subcategory_name,
  p.price,
  p.min_stock,
  p.max_stock
from
  products p
  join categories c on p.category_id = c.category_id
  join subcategories s on p.subcategory_id = s.subcategory_id;


  create table
  public.subcategories (
    subcategory_id serial,
    subcategory_name character varying(255) not null,
    category_id integer null,
    constraint subcategories_pkey primary key (subcategory_id),
    constraint subcategories_category_id_fkey foreign key (category_id) references categories (category_id)
  ) tablespace pg_default;


  create table
  public.uploaded_files (
    file_id serial,
    file_name character varying(255) not null,
    file_path character varying(255) not null,
    uploaded_by integer not null,
    upload_date timestamp without time zone null default current_timestamp,
    staff_access boolean null default false,
    manager_access boolean null default false,
    service_access boolean null default false,
    constraint uploaded_files_pkey primary key (file_id),
    constraint uploaded_files_uploaded_by_fkey foreign key (uploaded_by) references users (id)
  ) tablespace pg_default;

  create view
  public.uploaded_files_view as
select
  uf.file_id,
  uf.file_name,
  uf.file_path,
  uf.uploaded_by,
  uf.upload_date,
  uf.staff_access,
  uf.manager_access,
  uf.service_access,
  u.username as uploaded_by_username,
  u.useremail as uploaded_by_email
from
  uploaded_files uf
  join users u on uf.uploaded_by = u.id;

  create table
  public.users (
    id serial,
    username character varying(50) not null,
    useremail character varying(100) not null,
    password character varying(255) not null,
    role character varying(50) not null,
    datetime timestamp without time zone null default current_timestamp,
    mobile_number character varying(50) null,
    address character varying(255) null,
    phone_number character varying(50) null,
    constraint users_pkey primary key (id),
    constraint users_useremail_key unique (useremail)
  ) tablespace pg_default;

  is the current database info ,

  -- Table: public.sales_stages
CREATE TABLE public.sales_stages (
    stage_id SERIAL PRIMARY KEY,
    stage_name VARCHAR(255) NOT NULL
) TABLESPACE pg_default;

-- Table: public.pipelines
CREATE TABLE public.pipelines (
    pipeline_id SERIAL PRIMARY KEY,
    pipeline_name VARCHAR(255) NOT NULL
) TABLESPACE pg_default;

-- Table: public.pipeline_stages
CREATE TABLE public.pipeline_stages (
    stage_id SERIAL PRIMARY KEY,
    pipeline_id INTEGER NOT NULL REFERENCES pipelines(pipeline_id),
    stage_name VARCHAR(255) NOT NULL,
    stage_order INTEGER NOT NULL
) TABLESPACE pg_default;

-- Table: public.sales
CREATE TABLE public.sales (
    sale_id SERIAL PRIMARY KEY,
    sale_name VARCHAR(255) NOT NULL,
    pipeline_id INTEGER NOT NULL REFERENCES pipelines(pipeline_id),
    current_stage_id INTEGER NOT NULL REFERENCES pipeline_stages(stage_id),
    current_user_id INTEGER NOT NULL REFERENCES users(id),
    salesflowcode VARCHAR(255) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
) TABLESPACE pg_default;

-- Table: public.sales_fields
CREATE TABLE public.sales_fields (
    field_id SERIAL PRIMARY KEY,
    stage_id INTEGER NOT NULL REFERENCES pipeline_stages(stage_id),
    field_name VARCHAR(255) NOT NULL,
    is_file BOOLEAN DEFAULT FALSE
) TABLESPACE pg_default;

-- Table: public.sales_data
CREATE TABLE public.sales_data (
    data_id SERIAL PRIMARY KEY,
    sale_id INTEGER NOT NULL REFERENCES sales(sale_id),
    field_id INTEGER NOT NULL REFERENCES sales_fields(field_id),
    field_value TEXT
) TABLESPACE pg_default;
-- Table: public.sales_stages
CREATE TABLE public.sales_stages (
    stage_id SERIAL PRIMARY KEY,
    stage_name VARCHAR(255) NOT NULL
) TABLESPACE pg_default;

-- Table: public.pipelines
CREATE TABLE public.pipelines (
    pipeline_id SERIAL PRIMARY KEY,
    pipeline_name VARCHAR(255) NOT NULL
) TABLESPACE pg_default;

-- Table: public.pipeline_stages
CREATE TABLE public.pipeline_stages (
    stage_id SERIAL PRIMARY KEY,
    pipeline_id INTEGER NOT NULL REFERENCES pipelines(pipeline_id),
    stage_name VARCHAR(255) NOT NULL,
    stage_order INTEGER NOT NULL
) TABLESPACE pg_default;

-- Table: public.sales
CREATE TABLE public.sales (
    sale_id SERIAL PRIMARY KEY,
    sale_name VARCHAR(255) NOT NULL,
    pipeline_id INTEGER NOT NULL REFERENCES pipelines(pipeline_id),
    current_stage_id INTEGER NOT NULL REFERENCES pipeline_stages(stage_id),
    current_user_id INTEGER NOT NULL REFERENCES users(id),
    salesflowcode VARCHAR(255) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
) TABLESPACE pg_default;

-- Table: public.sales_fields
CREATE TABLE public.sales_fields (
    field_id SERIAL PRIMARY KEY,
    stage_id INTEGER NOT NULL REFERENCES pipeline_stages(stage_id),
    field_name VARCHAR(255) NOT NULL,
    is_file BOOLEAN DEFAULT FALSE
) TABLESPACE pg_default;

-- Table: public.sales_data
CREATE TABLE public.sales_data (
    data_id SERIAL PRIMARY KEY,
    sale_id INTEGER NOT NULL REFERENCES sales(sale_id),
    field_id INTEGER NOT NULL REFERENCES sales_fields(field_id),
    field_value TEXT
) TABLESPACE pg_default;


  now we have to add contacts 

  pipelines are like - SMAM , sale , khseerasree , general subsidy , irrigation subsidy 

stages - sale , supply , installation , sale completed , feedback , demo etc ,

contacts have pipelines and stages and dates of each day when a customer moves from one stage of a slected pipline to another 

dates are saved for first in first out for sale , low waiting number first ,

also there should be add fields to save files or values , admin should be able to add a new field that field can be file or value , which can be chosen by the admin 

eg - description , feed back , saakshi pathram(file) , 

when pipeline change stages also change dynamically in a dropdown , and those are set by the admin

also for each customer there is a code , in that code there is the unique userid of people who participated in the sale ,that field value is seperated by slash / eg 1/23/45 the the numbers are the userid of people who were assigned the  , when one customer enquiry move from one stage to another the last person to take part in the sale is rewarded by a point there are two tables to store total points of each user and another with points add datetime to mark all progress so that montly perfomance summary of each salesman can be colected 