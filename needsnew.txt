Requirements for Contacts

Pipelines and Stages:

Pipelines:
Examples: SMAM, Sale, Khseerasree, General Subsidy, Irrigation Subsidy

Stages:
Examples: Sale, Supply, Installation, Sale Completed, Feedback, Demo

Admin can add new pipelines and new stages for existing pipelines

Ability to add fields to pipeline stages (either files or values) which can be chosen by the admin (e.g., description, feedback, saakshi pathram (file)).


Functionality:
Each contact moves through stages within a selected pipeline.
Dates are tracked FIFO (First-In-First-Out) for sale with low waiting numbers first.
Pipeline stage transitions should dynamically update in dropdowns and are set by admin.

Customer Codes and UserFlow code 
Each customer has a unique customercode and userflow containing the user IDs of participants in the sale, separated by slashes (e.g., 1/23/45).
When a customer inquiry moves stages, the last participating user is rewarded with a point.

first salesman took the initial client call which then led to a follow up so the flow code will be 21/ where 21 is the user id of the salesman who
took the first call , when the person who did a followup and moves the customer to biling his flowcode will be 21/40/ where 40 is the id of the person who did the follow up 
the final stage is customer won or customer lost , if its customer won only add the the last id , because this flow code is used to claculate the points of the users

Performance Tracking:
Two tables are needed:
One to store the total points of each user.
Another to track points and add datetime to monitor monthly performance summaries of salesmen.,
 ,
 
The current database schema is supbase url : https://tyzhqkvauoujzwxwkqsg.supabase.co
supabase api key : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InR5emhxa3ZhdW91anp3eHdrcXNnIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MTgxNzE0MDksImV4cCI6MjAzMzc0NzQwOX0.-Cvcfopgseqzk2vzmhCxvppnyEhk8RDVuqfkB67ppzU

create table
  public.categories (
    category_id serial,
    category_name character varying(255) not null,
    constraint categories_pkey primary key (category_id)
  ) tablespace pg_default;

  create table
  public.products (
    product_id serial,
    product_code character varying(50) not null,
    product_name character varying(255) not null,
    category_id integer null,
    subcategory_id integer null,
    price numeric(10, 2) not null,
    min_stock integer not null,
    max_stock integer not null,
    current_stock integer not null default 0,
    constraint products_pkey primary key (product_id),
    constraint products_category_id_fkey foreign key (category_id) references categories (category_id),
    constraint products_subcategory_id_fkey foreign key (subcategory_id) references subcategories (subcategory_id)
  ) tablespace pg_default;

  create view
  public.products_view as
select
  p.product_id,
  p.product_code,
  p.product_name,
  c.category_name,
  s.subcategory_name,
  p.price,
  p.min_stock,
  p.max_stock
from
  products p
  join categories c on p.category_id = c.category_id
  join subcategories s on p.subcategory_id = s.subcategory_id;


  create table
  public.subcategories (
    subcategory_id serial,
    subcategory_name character varying(255) not null,
    category_id integer null,
    constraint subcategories_pkey primary key (subcategory_id),
    constraint subcategories_category_id_fkey foreign key (category_id) references categories (category_id)
  ) tablespace pg_default;


  create table
  public.uploaded_files (
    file_id serial,
    file_name character varying(255) not null,
    file_path character varying(255) not null,
    uploaded_by integer not null,
    upload_date timestamp without time zone null default current_timestamp,
    staff_access boolean null default false,
    manager_access boolean null default false,
    service_access boolean null default false,
    constraint uploaded_files_pkey primary key (file_id),
    constraint uploaded_files_uploaded_by_fkey foreign key (uploaded_by) references users (id)
  ) tablespace pg_default;

  create view
  public.uploaded_files_view as
select
  uf.file_id,
  uf.file_name,
  uf.file_path,
  uf.uploaded_by,
  uf.upload_date,
  uf.staff_access,
  uf.manager_access,
  uf.service_access,
  u.username as uploaded_by_username,
  u.useremail as uploaded_by_email
from
  uploaded_files uf
  join users u on uf.uploaded_by = u.id;

  create table
  public.users (
    id serial,
    username character varying(50) not null,
    useremail character varying(100) not null,
    password character varying(255) not null,
    role character varying(50) not null,
    datetime timestamp without time zone null default current_timestamp,
    mobile_number character varying(50) null,
    address character varying(255) null,
    phone_number character varying(50) null,
    constraint users_pkey primary key (id),
    constraint users_useremail_key unique (useremail)
  ) tablespace pg_default;